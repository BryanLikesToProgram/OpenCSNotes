	Assignments
		Projects
			Due 11:59 pm due date
		Lab
			Due 11:59 every friday night
			
	Email
		Use "CS 216 & Section #" in subject line 
	
UNIX/Linux
	Kernal written in C
	Graduate schools require Linux & Coding tests & interviews are often in UNIX
	Old but still powerful, backbone of internet
	
	Linux	
		Open source version of Unis
	UNIX	
		OS ceated in 1960's by Ken Thompson, Bell Labs.
		Many branches
			BSD (Berkeley Software Distribution)
			Linux
		General Charracteristics
			Multiuser & Multitasking	
				Now standard for mots OS'
			Over 40 years okd
				Plenty of documentation, examples, & source code
			Free applications & Os
				Opensource free software 
			Less Respurce Intensive
				Significantly less demaning on system resources than other OS'
			Most Servers run UNIX	
				Especially backbone Internet systems
		Flavors of UNIX
			Sun Solaris
			GNU/Linux
				Ubuntu used in the CS dept for server dev
			MacOS X
	Openstack
		Popular cloud computing project
		VM (Virtual Machine) used for CS216
			Always test on VM before submission for benefit of TA
		Dashboard
			Web interface used to access VM console
		OpenStack instance
			Term for VM
		Access
			use linkblue ID & password
			controller.netlab.uky.edu
			"Instances"
				instance name (linkblue ID)
				"Instance Console"
					enter linkblue ID & pass to continue
			PUTTY or other ssh software
				Hostname = linkblue id.netlab.uky.edu 
				Port: 22
					login as: linkblue ID
					password: type linkblue password (UNIX does not display characters in password field)
	Terminal 
		Default terminal is Bash	
		Shell
			Command line interpreter, reads user commands and executes them
			Iterpreter
				Compiles & Executes single commands at a time
				(Language interpreter at Olympics, repeats in English after primary announcer)
			Compiler 
				Compiles the whole program at once, executes once.
				(Reading translated transcript after the Olympic Event)
			~echo
				"~echo $SHELL"
				Display all arguments for: 
			~ps
				Print snapshot of current active procceses 
		Bash
			GNU shell (Bourne Again Shell) [sh]
				OG UNIX interpreter
			sh-compatable shell, incorporates features from Korn shell & C shell
			Follows IEEE standards
		Anatomy of terminal
			SOL@LAPTOP-NDHP9AK9:~$ pwd
			Prompt
				SOL@LAPTOP-NDHP9AK9:~$
				default prompt ends at $
				Editable
					change ps1 variable
					"echo $PS1"
						Shows current variable	
			Command
				pwd

	List of Ubuntu Commands
		~* > output.txt
			write command output to txt file
		~man x
			display manual of x program/command
		~uname
				OS info 
				"uname -a"
					detailed info
		~pwd
			"Print working directory"
		~ls
			"List contents"
				-l
					"Long list"
					9 permission bits 
						d, r w x,  r w x, r w x,
						first 3 bits for owner, group, others, all users
						(read, write, execute)
		~mkdir
			"Make directory"
		~rmir
			"Remove directory"
		~rm
			"remove file"
			-r
				"and all of its contents"
		~cd
			"Change Directory"
		~cp
			"Copy File"
		~mv
			"move or rename file"
		~cat
			"Concat file & print output"
		~which
			"Print full path of command"
		~ echo 
			"Write arugments to standard output"
		~exit
			"Exit login shell"
		~ chmod
			"Change mode bits of a file/directory"
			Changes the rwx [ls -l]
				u (+∨-) (r∧∨w∧∨x)
		~grep
			"pattern matching, prints lines matching a pattern"
			Global Regular Expression Print
				-i
					case insensitive search
				-n 
					prefix each line of output w/ the line number w/in its input file
				-w
					select only those lines containing matches that form whole words
		~sort
			-d 
				dictionary order
			-f	
				ignore case
			-k 
				key
				sort -k 2 (sorts according to second column of text)
		~* | *
			 Command pipeing 
			Passes outut from leftside of | to right side
Regular Expressions (regex)
	pattern that defines a class of strings
	Grammar
		Alternation | (Or)
		Grouping () (Scope or & precedince)
		Quantification ?, *, +
			? (Zero or one) 
			*(Zero or more)
			+  (One or more)
		Matching 
			For use with a string, place inside quotations
				Ex. " ^Hello Wo*ld"
			. (a single character
			*(alny string)
			[a-zA-Z]
			[0-9]
			[^0-9]
			^ (Beginning of a string)
			$ (End of a string)
			\< \> (Beginning and end of a word)
		Special Characters
			Escape special characters w/ "\" (Otherwise terminal thinks you're calling it, not the regex expression)

	
	CS216 Lab 2 notes
		~sort -d file.txt
			Sort a text file alphebeticaly (Dictionary) left to right
		~grep "string" 
			Search using regular expressions
			Regular Expression grammer is NOT in the man page 
			"https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285"
				^  a simple Regex cheatsheet w/ examples 
		~grep - i  "string"
			-i 
				ignore case (Capitalization)
		~grep "Today I ate [1-4] Bannana?" 
			[1-4]
				Search for the string with number of bannana being  1-4
			?
				Search for String ending with 0 or one character [bannana or bannanas]
		~ sort  -k3-r lilyexbfs.txt | grep "^Stephen" 
				  lilyexbfs.txt
			[Jack Johnson 6]
			[Stephen Tyler 8]
			[Just Steve 3]
			[...]
			-k3
				Sort based on 3rd column 
					Hotness
			-r
				Reverse sort 
					Hottest first
			'|'
				Piping
					passes output from command on left side of | and into input of right side command
						Pass list of lily's ex's sorted by hotness to grep command
			"^Stephen"
				Search for lines that begin with the name Stephen
			
			
			